// Generated by view binder compiler. Do not edit!
package com.cs4750.team15.expensetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cs4750.team15.expensetracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWelcomeScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText budgetAmount;

  @NonNull
  public final LinearLayout budgetLinearLayout;

  @NonNull
  public final TextView budgetTitle;

  @NonNull
  public final Button chatButton;

  @NonNull
  public final TextView dollarSign;

  @NonNull
  public final Button expenseListButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView navOptions;

  @NonNull
  public final Button saveBudgetButton;

  @NonNull
  public final Button spendingAnalysisButton;

  @NonNull
  public final TextView welcomeDateDisplay;

  @NonNull
  public final TextView welcomeMessage;

  @NonNull
  public final ConstraintLayout welcomeScreen;

  private FragmentWelcomeScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText budgetAmount, @NonNull LinearLayout budgetLinearLayout,
      @NonNull TextView budgetTitle, @NonNull Button chatButton, @NonNull TextView dollarSign,
      @NonNull Button expenseListButton, @NonNull ImageView imageView, @NonNull TextView navOptions,
      @NonNull Button saveBudgetButton, @NonNull Button spendingAnalysisButton,
      @NonNull TextView welcomeDateDisplay, @NonNull TextView welcomeMessage,
      @NonNull ConstraintLayout welcomeScreen) {
    this.rootView = rootView;
    this.budgetAmount = budgetAmount;
    this.budgetLinearLayout = budgetLinearLayout;
    this.budgetTitle = budgetTitle;
    this.chatButton = chatButton;
    this.dollarSign = dollarSign;
    this.expenseListButton = expenseListButton;
    this.imageView = imageView;
    this.navOptions = navOptions;
    this.saveBudgetButton = saveBudgetButton;
    this.spendingAnalysisButton = spendingAnalysisButton;
    this.welcomeDateDisplay = welcomeDateDisplay;
    this.welcomeMessage = welcomeMessage;
    this.welcomeScreen = welcomeScreen;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWelcomeScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWelcomeScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_welcome_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWelcomeScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.budget_amount;
      EditText budgetAmount = ViewBindings.findChildViewById(rootView, id);
      if (budgetAmount == null) {
        break missingId;
      }

      id = R.id.budgetLinearLayout;
      LinearLayout budgetLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (budgetLinearLayout == null) {
        break missingId;
      }

      id = R.id.budget_title;
      TextView budgetTitle = ViewBindings.findChildViewById(rootView, id);
      if (budgetTitle == null) {
        break missingId;
      }

      id = R.id.chat_button;
      Button chatButton = ViewBindings.findChildViewById(rootView, id);
      if (chatButton == null) {
        break missingId;
      }

      id = R.id.dollar_sign;
      TextView dollarSign = ViewBindings.findChildViewById(rootView, id);
      if (dollarSign == null) {
        break missingId;
      }

      id = R.id.expense_list_button;
      Button expenseListButton = ViewBindings.findChildViewById(rootView, id);
      if (expenseListButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.nav_options;
      TextView navOptions = ViewBindings.findChildViewById(rootView, id);
      if (navOptions == null) {
        break missingId;
      }

      id = R.id.save_budget_button;
      Button saveBudgetButton = ViewBindings.findChildViewById(rootView, id);
      if (saveBudgetButton == null) {
        break missingId;
      }

      id = R.id.spending_analysis_button;
      Button spendingAnalysisButton = ViewBindings.findChildViewById(rootView, id);
      if (spendingAnalysisButton == null) {
        break missingId;
      }

      id = R.id.welcome_date_display;
      TextView welcomeDateDisplay = ViewBindings.findChildViewById(rootView, id);
      if (welcomeDateDisplay == null) {
        break missingId;
      }

      id = R.id.welcome_message;
      TextView welcomeMessage = ViewBindings.findChildViewById(rootView, id);
      if (welcomeMessage == null) {
        break missingId;
      }

      ConstraintLayout welcomeScreen = (ConstraintLayout) rootView;

      return new FragmentWelcomeScreenBinding((ConstraintLayout) rootView, budgetAmount,
          budgetLinearLayout, budgetTitle, chatButton, dollarSign, expenseListButton, imageView,
          navOptions, saveBudgetButton, spendingAnalysisButton, welcomeDateDisplay, welcomeMessage,
          welcomeScreen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
